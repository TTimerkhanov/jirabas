# Generated by Django 3.0.11 on 2020-12-21 22:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PriorityTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(max_length=255, verbose_name='Name of priority')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('short_name', models.CharField(max_length=4, verbose_name='Short name')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Description')),
                ('date_start', models.DateTimeField(verbose_name='Date start')),
                ('date_finish', models.DateTimeField(verbose_name='Date finish')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='StatusTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, verbose_name='Name of status')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='TypeRelationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, verbose_name='Name of type')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='TypeTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, verbose_name='Name of type')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_number', models.CharField(max_length=20, verbose_name='Number of task')),
                ('name', models.CharField(max_length=255, verbose_name='Name of task')),
                ('description', models.TextField(blank=True, max_length=5000, verbose_name='Description')),
                ('acceptance_criteria', models.TextField(blank=True, max_length=2000, verbose_name='Acceptance criteria')),
                ('date_create', models.DateTimeField(verbose_name='Creation date')),
                ('date_modified', models.DateTimeField(blank=True, null=True, verbose_name='Modification date')),
                ('deadline_date', models.DateTimeField(blank=True, null=True, verbose_name='Deadline date')),
                ('estimate_hours', models.IntegerField(blank=True, null=True, verbose_name='Estimate task in hours')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Creator of task')),
                ('performer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performer_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Performer of task')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='users.PriorityTask', verbose_name='Priority')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='users.Project', verbose_name='Project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='users.StatusTask', verbose_name='Status')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='users.TypeTask', verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='RelationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_tasks_main', to='users.Task', verbose_name='Task')),
                ('second_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_tasks_second', to='users.Task', verbose_name='Other task')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_tasks', to='users.TypeRelationTask', verbose_name='Type of relation')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL, verbose_name='Participant of project')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='users.Project', verbose_name='Project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='users.Role', verbose_name='Role of participant')),
            ],
        ),
        migrations.CreateModel(
            name='LogTimeTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes', models.IntegerField(verbose_name='Log time in minutes')),
                ('date_logged', models.DateTimeField(verbose_name='Date of logging')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='Description')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logged_time', to='users.Task', verbose_name='Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logged_time', to=settings.AUTH_USER_MODEL, verbose_name='Performer')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000, verbose_name='Text of comment')),
                ('date_create', models.DateTimeField(verbose_name='Creation date')),
                ('date_modified', models.DateTimeField(blank=True, null=True, verbose_name='Modification date')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.Task', verbose_name='Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
        ),
    ]
